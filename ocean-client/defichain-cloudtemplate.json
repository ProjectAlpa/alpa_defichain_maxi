{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Defichain Wallet information (Don't forget to add your seed parameter as SecureString seperatly)"
          },
          "Parameters": [
            "DeFiAddress",
            "DeFiVault"
          ]
        },
        {
          "Label": {
            "default": "Script Parameters"
          },
          "Parameters": [
            "TokenId",
            "TokenSymbol",
            "LMToken"
          ]
        },
        {
          "Label": {
            "default": "Monitoring User (Optional but recommended for security)"
          },
          "Parameters": [
            "MonitoringUsername",
            "MonitoringPassword"
          ]
        }
      ],
      "ParameterLabels": {
        "DeFiAddress": {
          "default": "Defichain Address"
        },
        "DeFiVault": {
          "default": "Defichain Vault Id"
        },
        "TokenId": {
          "default": "Defichain Token Id"
        },
        "TokenSymbol": {
          "default": "Defichain Token Symbol"
        },
        "LMToken": {
          "default": "LM Token"
        },
        "MonitoringUsername": {
          "default": "Monitoring username"
        },
        "MonitoringPassword": {
          "default": "Monitoring user password"
        }
      }
    }
  },
  "Parameters": {
    "MonitoringUsername": {
      "Type": "String",
      "Default": "",
      "Description": "username to be used for monitoring the script. Needs to be unique within your AWS (even across regions!)"
    },
    "MonitoringPassword": {
      "Type": "String",
      "Default": "",
      "NoEcho": true,
      "Description": "password to be used for monitoring the script. Password must have at least one number, Password must have at least one symbol"
    },
    "DeFiAddress": {
      "Type": "String",
      "MinLength": "42",
      "MaxLength": "42",
      "AllowedPattern" : "df1[a-zA-Z0-9]*",
      "Description": "Your defichain address to use, must be from the wallet defined by the seed parameter"
    },
    "DeFiVault": {
      "Type": "String",
      "MinLength": "64",
      "MaxLength": "64",
      "AllowedPattern" : "[a-f0-9]*",
      "Description": "The id of your vault on defichain. given dfi address must be owner of the vault"
    },
    "TokenId": {
      "Type": "Number",
      "MinValue": 0,
      "Default": "0",
      "Description": "The DFI Token ID."
    },
    "TokenSymbol": {
      "Type": "String",
      "MinLength": "2",
      "AllowedPattern" : "[A-Z]*",
      "Description": "The dToken used for Exchange f.e. DUSD"
    },
    "LMToken": {
      "Type": "String",
      "Default": "QQQ",
      "MinLength": "2",
      "AllowedPattern" : "[A-Z]*",
      "Description": "The dToken used for Liquidity Mining f.e. QQQ"
    }
  },
  "Rules": {
    "testInstanceType": {
      "RuleCondition": {
        "Fn::Not": [
          {
            "Fn::Equals": [
              {
                "Ref": "MonitoringUsername"
              },
              ""
            ]
          }
        ]
      },
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Equals": [
                  {
                    "Ref": "MonitoringPassword"
                  },
                  ""
                ]
              }
            ]
          },
          "AssertDescription": "Password can not be empty"
        }
      ]
    }
  },
  "Conditions": {
    "CreateMonitoringUser": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "MonitoringUsername"
            },
            ""
          ]
        }
      ]
    }
  },
  "Resources": {
    "monitoringUser": {
      "Type": "AWS::IAM::User",
      "Condition": "CreateMonitoringUser",
      "Properties": {
        "UserName": {
          "Fn::Sub" : "${MonitoringUsername}-${AWS::StackName}"
        },
        "Path": "/",
        "LoginProfile": {
          "Password": {
            "Ref": "MonitoringPassword"
          }
        },
        "Policies": [
          {
            "PolicyName": "vaultMaxiMonitoring",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ssm:Describe*"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ssm:Get*",
                    "ssm:List*",
                    "ssm:PutParameter*"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/defichain-maxi/*-collateral-ratio"
                    },
                    {
                      "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/defichain-maxi-${AWS::StackName}/lm-token"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ssm:Get*",
                    "ssm:List*"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/defichain-maxi-${AWS::StackName}/state"
                    }
                  ]
                },
                {
                  "Action": [
                    "logs:Describe*",
                    "logs:Get*",
                    "logs:List*",
                    "logs:StartQuery",
                    "logs:StopQuery",
                    "logs:TestMetricFilter",
                    "logs:FilterLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "events:DescribeRule",
                    "events:DescribeEventBus",
                    "events:DescribeEventSource",
                    "events:ListRules",
                    "events:ListEventBuses"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "events:ListTargetsByRule",
                    "events:EnableRule",
                    "events:DisableRule"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "vaultMaxiTrigger",
                      "Arn"
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "vaultMaxiRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "LogsAndSSM",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ssm:Describe*",
                    "ssm:Get*",
                    "ssm:List*",
                    "ssm:DeleteParameter*"
                  ],
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn:aws:ssm",
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AWS::AccountId"
                        },
                        {
                          "Fn::Sub": "parameter/defichain-maxi-${AWS::StackName}/*"
                        }
                      ]
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ssm:Describe*",
                    "ssm:Get*",
                    "ssm:List*"
                  ],
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn:aws:ssm",
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AWS::AccountId"
                        },
                        {
                          "Fn::Sub": "parameter/defichain-maxi/*"
                        }
                      ]
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ssm:PutParameter"
                  ],
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn:aws:ssm",
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AWS::AccountId"
                        },
                        {
                          "Fn::Sub": "parameter/defichain-maxi-${AWS::StackName}/state"
                        }
                      ]
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "vaultMaxiTrigger": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Name": {
          "Fn::Sub": "vaultMaxiTrigger-${AWS::StackName}"
        },
        "Description": "Triggers the vault maxi",
        "ScheduleExpression": "rate(15 minutes)",
        "Targets": [
          {
            "Id": "vaultMaxiTarget",
            "Arn": {
              "Fn::GetAtt": [
                "vaultMaxiLambda",
                "Arn"
              ]
            }
          }
        ],
        "State": "ENABLED"
      }
    },
    "vaultMaxiTriggerInvokeLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "vaultMaxiLambda"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "vaultMaxiTrigger",
            "Arn"
          ]
        }
      }
    },
    "vaultMaxiLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": {
          "Fn::Sub": "maxi-${AWS::StackName}"
        },
        "Handler": "index.main",
        "Role": {
          "Fn::GetAtt": [
            "vaultMaxiRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "VAULTMAXI_STORE_POSTIX": {
              "Fn::Sub": "-${AWS::StackName}"
            },
            "DEFICHAIN_SEED_KEY": {
              "Fn::Sub": "/defichain-maxi-${AWS::StackName}/wallet/seed"
            }
          }
        },
        "Code": {
          "S3Bucket": {"Fn::Sub": "one.alpa.test.eu.central.bucket"},
          "S3Key": "defichain-maxi/vault-maxi.zip"
        },
        "Runtime": "nodejs14.x",
        "Timeout": 890
      }
    },
    "vaultMaxiParamDeFiAddress": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "DataType": "text",
        "Description": "Your defichain address",
        "Name": {
          "Fn::Sub": "/defichain-maxi-${AWS::StackName}/wallet/address"
        },
        "Type": "String",
        "Value": {
          "Ref": "DeFiAddress"
        }
      }
    },
    "vaultMaxiParamDeFiVault": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "DataType": "text",
        "Description": "Id of your defichain vault (address must be owner)",
        "Name": {
          "Fn::Sub": "/defichain-maxi-${AWS::StackName}/wallet/vault"
        },
        "Type": "String",
        "Value": {
          "Ref": "DeFiVault"
        }
      }
    },
    "vaultMaxiParamTokenId": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "DataType": "text",
        "Description": "token id",
        "Name": {
          "Fn::Sub": "/defichain-maxi-${AWS::StackName}/settings/token-id"
        },
        "Type": "String",
        "Value": {
          "Ref": "TokenId"
        }
      }
    },
    "vaultMaxiParamTokenSymbol": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "DataType": "text",
        "Description": "token symbol",
        "Name": {
          "Fn::Sub": "/defichain-maxi-${AWS::StackName}/settings/token-symbol"
        },
        "Type": "String",
        "Value": {
          "Ref": "TokenSymbol"
        }
      }
    },
    "vaultMaxiParamLMToken": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "DataType": "text",
        "Description": "the dToken to use for LM",
        "Name": {
          "Fn::Sub": "/defichain-maxi-${AWS::StackName}/settings/lm-token"
        },
        "Type": "String",
        "Value": {
          "Ref": "LMToken"
        }
      }
    },
    "vaultMaxiParamState": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "DataType": "text",
        "Description": "the state of last execution. DO NOT CHANGE THIS VALUE",
        "Name": {
          "Fn::Sub": "/defichain-maxi-${AWS::StackName}/state"
        },
        "Type": "String",
        "Value": "start"
      }
    }
  }
}